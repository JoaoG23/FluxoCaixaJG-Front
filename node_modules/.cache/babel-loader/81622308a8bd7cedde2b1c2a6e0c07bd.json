{"ast":null,"code":"var _jsxFileName = \"C:\\\\github\\\\FluxosFrontend\\\\view\\\\src\\\\Pages\\\\Dashboard\\\\Estatisticas\\\\AreaGrafico\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Filler, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { Area } from \"./styles\";\nimport { options } from \"./DadosGrafico/options\";\nimport urlBase from \"../../../../services/UrlBase\";\nimport { converterValoresStringParaNumero } from '../../services/converterValoresStringParaNumero';\nimport { labels } from './DadosGrafico/labels'; // Types ---\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Filler, Legend);\nexport function AreaGrafico() {\n  _s();\n\n  const estoqueGastos12Meses = [];\n  const estoqueGanhos12Meses = [];\n  const [gastoUltimos12Meses, setGastoUltimos12Meses] = useState(estoqueGastos12Meses);\n  const [ganhoUltimos12Meses, setGanhoUltimos12Meses] = useState(estoqueGanhos12Meses);\n  useEffect(() => {\n    async function getGastosUltimos12Meses() {\n      const resposta = await urlBase.get(\"/calculos/gastoultimo12/2022\");\n      const meses = resposta.data;\n      meses.map(mes => {\n        var _mes$verRegistro;\n\n        let gasto = mes === null || mes === void 0 ? void 0 : (_mes$verRegistro = mes.verRegistro) === null || _mes$verRegistro === void 0 ? void 0 : _mes$verRegistro.resposta;\n        let gastoConvertido = converterValoresStringParaNumero(gasto);\n        estoqueGastos12Meses.push(gastoConvertido);\n      });\n      setGastoUltimos12Meses(estoqueGastos12Meses);\n    }\n\n    getGastosUltimos12Meses();\n\n    async function getGanhoUltimos12Meses() {\n      const resposta = await urlBase.get(\"/calculos/ganhoultimo12/2022\");\n      const meses = resposta.data;\n      meses.map(mes => {\n        var _mes$ganho;\n\n        let ganho = mes === null || mes === void 0 ? void 0 : (_mes$ganho = mes.ganho) === null || _mes$ganho === void 0 ? void 0 : _mes$ganho.resposta;\n        let ganhoConvertido = converterValoresStringParaNumero(ganho);\n        estoqueGanhos12Meses.push(ganhoConvertido);\n      });\n      setGanhoUltimos12Meses(estoqueGanhos12Meses);\n    }\n\n    getGanhoUltimos12Meses();\n  }, []);\n  const data = {\n    labels,\n    datasets: [{\n      fill: true,\n      label: \"Gasto\",\n      data: gastoUltimos12Meses,\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }, {\n      fill: true,\n      label: \"Ganhos\",\n      data: ganhoUltimos12Meses,\n      borderColor: \"rgb(199, 53, 235)\",\n      backgroundColor: \"rgba(235, 53, 165, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Area, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AreaGrafico, \"8OO6ognGi18IcK9T5zaHhZ2x5nY=\");\n\n_c = AreaGrafico;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaGrafico\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","Line","Area","options","urlBase","converterValoresStringParaNumero","labels","register","AreaGrafico","estoqueGastos12Meses","estoqueGanhos12Meses","gastoUltimos12Meses","setGastoUltimos12Meses","ganhoUltimos12Meses","setGanhoUltimos12Meses","getGastosUltimos12Meses","resposta","get","meses","data","map","mes","gasto","verRegistro","gastoConvertido","push","getGanhoUltimos12Meses","ganho","ganhoConvertido","datasets","fill","label","borderColor","backgroundColor"],"sources":["C:/github/FluxosFrontend/view/src/Pages/Dashboard/Estatisticas/AreaGrafico/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend,\n} from \"chart.js\";\n\nimport { Line } from \"react-chartjs-2\";\nimport { Area } from \"./styles\";\n\nimport { options } from \"./DadosGrafico/options\";\nimport urlBase from \"../../../../services/UrlBase\";\nimport {converterValoresStringParaNumero} from '../../services/converterValoresStringParaNumero';\n\nimport { labels } from './DadosGrafico/labels';\n// Types ---\nimport { Gastos , Ganhos } from './DadosGrafico/types';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Filler,\n  Legend\n);\n\nexport function AreaGrafico() {\n  const estoqueGastos12Meses: number[] = [];\n  const estoqueGanhos12Meses: number[] = [];\n  const [gastoUltimos12Meses, setGastoUltimos12Meses] = useState<number[]>(\n    estoqueGastos12Meses\n  );\n  const [ganhoUltimos12Meses, setGanhoUltimos12Meses] = useState<number[]>(\n    estoqueGanhos12Meses\n  );\n\n  useEffect(() => {\n    async function getGastosUltimos12Meses() {\n      const resposta = await urlBase.get(\"/calculos/gastoultimo12/2022\");\n      const meses = resposta.data;\n\n      meses.map((mes: Gastos) => {\n        let gasto: any = mes?.verRegistro?.resposta;\n        let gastoConvertido = converterValoresStringParaNumero(gasto);\n        estoqueGastos12Meses.push(gastoConvertido);\n      });\n      setGastoUltimos12Meses(estoqueGastos12Meses);\n    }\n    getGastosUltimos12Meses();\n\n    async function getGanhoUltimos12Meses() {\n      const resposta = await urlBase.get(\"/calculos/ganhoultimo12/2022\");\n      const meses = resposta.data;\n      meses.map((mes: Ganhos) => {\n        let ganho: any = mes?.ganho?.resposta;\n        let ganhoConvertido = converterValoresStringParaNumero(ganho);\n        estoqueGanhos12Meses.push(ganhoConvertido);\n      });\n      setGanhoUltimos12Meses(estoqueGanhos12Meses);\n    }\n    getGanhoUltimos12Meses();\n  }, []);\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        fill: true,\n        label: \"Gasto\",\n        data: gastoUltimos12Meses,\n        borderColor: \"rgb(53, 162, 235)\",\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n      },\n      {\n        fill: true,\n        label: \"Ganhos\",\n        data: ganhoUltimos12Meses,\n        borderColor: \"rgb(199, 53, 235)\",\n        backgroundColor: \"rgba(235, 53, 165, 0.5)\",\n      },\n    ],\n  };\n  return (\n    <Area>\n      <Line options={options} data={data} />\n    </Area>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}